#!/bin/bash

# This script prepares and runs all the participants in one terminal, in serial,
# in parallel (MPI),
# forwarding the solvers' output to log files.
# Alternatively, you may execute the scripts "runSolid" and "runFluid"
# in separate terminals.

# The script "Allclean" cleans-up the result and log files.

# Link to the precice-config for the parallel run
echo "Setting up the preCICE configuration file for a parallel simulation..."
ln -s -f precice-config_parallel.xml precice-config.xml

# Participant 1: Fluid
Participant1="Fluid"
Solver1="buoyantPimpleFoam"

    # Prepare
    echo "Preparing the ${Participant1} participant..."
    blockMesh -case ${Participant1} > ${Participant1}_blockMesh.log 2>&1
    checkMesh -case ${Participant1} > ${Participant1}_checkMesh.log 2>&1

    # Decompose the mesh
    decomposePar -case ${Participant1} > ${Participant1}_decomposePar.log 2>&1

    # Run and get the process id
    echo "Starting the ${Participant1} participant..."
    mpirun -np 2 ${Solver1} -parallel -case ${Participant1} > ${Participant1}.log 2>&1 &
    PIDParticipant1=$!

# Participant 2: Solid
Participant2="Solid"
Solver2="laplacianFoam"

    # Prepare
    echo "Preparing the ${Participant2} participant..."
    blockMesh -case ${Participant2} > ${Participant2}_blockMesh.log 2>&1
    checkMesh -case ${Participant2} > ${Participant2}_checkMesh.log 2>&1

    # Decompose the mesh
    decomposePar -case ${Participant2} > ${Participant2}_decomposePar.log 2>&1

    # Run and get the process id
    echo "Starting the ${Participant2} participant..."
    mpirun -np 2 ${Solver2} -parallel -case ${Participant2} > ${Participant2}.log 2>&1 &
    PIDParticipant2=$!

# Wait for all the participants to finish
echo "Waiting for the participants to exit..."
echo "(you may run 'tail -f ${Participant1}.log' in another terminal to check the progress)"
wait ${PIDParticipant1}
wait ${PIDParticipant2}
if [ $? -ne 0 ] || [ "$(grep -c -E "error:" ${Participant1}.log)" -ne 0 ] || [ "$(grep -c -E "error:" ${Participant2}.log)" -ne 0 ]; then
    echo ""
    echo "Something went wrong... See the log files for more."
else
    echo ""
    echo "The simulation completed!"

    # Reconstruct the cases
    echo "Reconstructing case ${Participant1}..."
    reconstructPar -case ${Participant1} > ${Participant1}_reconstructPar.log 2>&1
    echo "Reconstructing case ${Participant2}..."
    reconstructPar -case ${Participant2} > ${Participant2}_reconstructPar.log 2>&1

    echo "You may now open '${Participant1}/${Participant1}.foam' and '${Participant2}/${Participant2}.foam' in ParaView."
    # Note: ".foam" triggers the native OpenFOAM reader of ParaView.
    # Change to ".OpenFOAM" to use the OpenFOAM reader provided with OpenFOAM.
fi
